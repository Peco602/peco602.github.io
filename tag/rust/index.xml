<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rust | Giovanni Pecoraro</title><link>https://www.peco602.com/tag/rust/</link><atom:link href="https://www.peco602.com/tag/rust/index.xml" rel="self" type="application/rss+xml"/><description>Rust</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Wed, 07 Dec 2022 00:00:00 +0000</lastBuildDate><image><url>https://www.peco602.com/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url><title>Rust</title><link>https://www.peco602.com/tag/rust/</link></image><item><title>Rust Universal Compiler</title><link>https://www.peco602.com/project/0050-rust-universal-compiler/</link><pubDate>Wed, 07 Dec 2022 00:00:00 +0000</pubDate><guid>https://www.peco602.com/project/0050-rust-universal-compiler/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Container solution to compile Rust projects for Linux, macOS and Windows.&lt;/p>
&lt;h2 id="build-the-image">Build the image&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ps1" data-lang="ps1">&lt;span class="line">&lt;span class="cl">&lt;span class="n">docker&lt;/span> &lt;span class="n">build&lt;/span> &lt;span class="n">-t&lt;/span> &lt;span class="nb">rust-universal&lt;/span>&lt;span class="n">-compiler:latest&lt;/span> &lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configure-the-project">Configure the project&lt;/h2>
&lt;p>To allow cross-compilation from Linux to Windows and MacOS, it is necessary to create in the project folder the &lt;code>.cargo/config&lt;/code> file containing the following lines:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[target.x86_64-pc-windows-msvc]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">rustflags&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">[&amp;#34;-C&amp;#34;, &amp;#34;target-feature=+crt-static&amp;#34;]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[target.x86_64-apple-darwin]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">linker&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;x86_64-apple-darwin14-clang&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">ar&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;x86_64-apple-darwin14-ar&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="compile-the-project">Compile the project&lt;/h2>
&lt;p>Compile for Linux (&lt;code>x86_64-unknown-linux-gnu&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker run --rm -v &lt;span class="nv">$PWD&lt;/span>/test-project:/app -w /app rust-universal-compiler:latest cargo build --target x86_64-unknown-linux-gnu --release
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Compile for MacOS (&lt;code>x86_64-apple-darwin&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker run --rm -v &lt;span class="nv">$PWD&lt;/span>/test-project:/app -w /app rust-universal-compiler:latest cargo build --target x86_64-apple-darwin --release
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Compile for Windows (&lt;code>x86_64-pc-windows-msvc&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker run --rm -v &lt;span class="nv">$PWD&lt;/span>/test-project:/app -w /app rust-universal-compiler:latest cargo build --target x86_64-pc-windows-msvc --release
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="dockerhub">DockerHub&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://hub.docker.com/r/peco602/rust-universal-compiler" target="_blank" rel="noopener">peco602/rust-universal-compiler&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="bibliography">Bibliography&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Jake-Shadle/xwin" target="_blank" rel="noopener">https://github.com/Jake-Shadle/xwin&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://wapl.es/rust/2019/02/17/rust-cross-compile-linux-to-macos.html" target="_blank" rel="noopener">https://wapl.es/rust/2019/02/17/rust-cross-compile-linux-to-macos.html&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>RustHunter</title><link>https://www.peco602.com/project/0020-rusthunter/</link><pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate><guid>https://www.peco602.com/project/0020-rusthunter/</guid><description>&lt;p>RustHunter is a modular incident response framework to build and compare environmental baselines. It is written in Rust and uses Ansible to collect data across multiple hosts.&lt;/p>
&lt;p>Due to the following features it can be also employed to perform threat hunting and incident handling:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Multi-Platform&lt;/strong>: it is able to collect data from both Windows, Linux and macOS machines;&lt;/li>
&lt;li>&lt;strong>Agentless&lt;/strong>: the usage of the Ansible technology based on SSH and WinRM allows to overcome the requirement of a local agent waiting for a task to be accomplished;&lt;/li>
&lt;li>&lt;strong>Easily Deployable&lt;/strong>: it is cross-platform and can be deployed both on premises and in a Cloud-based environment. A Bash and a PowerShell scripts have been developed to execute the tool respectively from a Linux and Windows machine;&lt;/li>
&lt;li>&lt;strong>Easily Expandable&lt;/strong>: it provides developer-ready Rust specifications offering an easy way to expand the product features by writing custom modules to collect additional machine data.&lt;/li>
&lt;/ul></description></item></channel></rss>